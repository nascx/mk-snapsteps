{"version":3,"sources":["../src/controllers/authCtrl.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAOa;AAPb;AAAA;AAIA;AAGO,IAAM,kBAAkB,OAAO,KAAc,QAAkB;AAClE,UAAI;AAEA,cAAM,EAAE,QAAQ,SAAS,IAAI,IAAI;AAGjC,cAAM,YAAY,MAAM,YAAY,MAAgB;AACpD,YAAI,UAAU,QAAQ;AAElB,cAAI,UAAU,YAAY,UAAU;AAChC,gBAAI,OAAO,GAAG,EAAE,KAAK,EAAC,SAAS,yBAAqB,CAAC;AAAA,UAEzD,OAAO;AACH,gBAAI,OAAO,GAAG,EAAE,KAAK,EAAC,SAAS,kBAAiB,CAAC;AACjD;AAAA,UACJ;AAAA,QACJ,OAAO;AAEH,cAAI,OAAO,GAAG,EAAE,KAAK,EAAC,SAAS,2BAAuB,CAAC;AAAA,QAC3D;AAAA,MACJ,SAAS,OAAO;AAEZ,YAAI,OAAO,GAAG,EAAE,KAAK,KAAK;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA","sourcesContent":["// importação de tipos de resposta e requisição do express\r\nimport { Request, Response } from \"express\";\r\n\r\n// importação do model (requisição ao banco) aonde se obtém a senha do usuário\r\nimport { getPassword } from \"../models/auth\";\r\n\r\n// função para validar a credencial\r\nexport const credentialCheck = async (req: Request, res: Response) => {\r\n    try {\r\n        // obtendo as informações que vem da requisição do cliente (setor e a senha)\r\n        const { sector, password } = req.query\r\n\r\n        // pegando a senha do setor que foi escolhido\r\n        const crendials = await getPassword(sector as string) as {status: boolean, message: string}\r\n        if (crendials.status) {\r\n            // caso a senha do setor seja igual a senha que o cliente forneceu ele é enviado uma mensagem de credencial válidas\r\n            if (crendials.message === password) {\r\n                res.status(200).json({message: 'Credenciais válidas'})\r\n            // caso a senha enviada pelo cliente e a do setor não sejam iguais devolve uma mensagem de senha incorreta\r\n            } else {\r\n                res.status(400).json({message: 'Senha incorreta'})\r\n                return\r\n            }\r\n        } else {\r\n            // caso exista erro é por que o setor não existe\r\n            res.status(404).json({message: 'Este setor não existe'})\r\n        }\r\n    } catch (error) {\r\n        // caso ocorra algum erro no serividor deve enviar uma mensagem com esse erro.\r\n        res.status(500).json(error)\r\n    }\r\n}"]}