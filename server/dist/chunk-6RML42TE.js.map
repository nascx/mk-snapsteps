{"version":3,"sources":["../src/config/multer.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,YAAY;AAEnB,OAAO,UAAU;AAFjB,IAMM,wBAYO,wBAGP,uBAYO,6BAGP,WAWO,UAGP,gBAWO;AA7Db;AAAA;AAMA,IAAM,yBAAyB,OAAO,YAAY;AAAA,MAC9C,aAAa,CAAC,KAAK,MAAM,aAAa;AAClC,cAAM,WAAoB,KAAK,KAAK,WAAW,2BAA2B;AAC1E,gBAAQ,IAAI,uBAAiB;AAC7B,iBAAS,MAAM,QAAQ;AAAA,MAC3B;AAAA,MACA,UAAU,SAAU,KAAK,MAAM,UAAU;AACrC,cAAM,WAAW,KAAK;AACtB,iBAAS,MAAM,GAAG,QAAQ,EAAE;AAAA,MAChC;AAAA,IACJ,CAAC;AAEM,IAAM,yBAAyB,OAAQ,EAAE,SAAU,uBAAuB,CAAC;AAGlF,IAAM,wBAAwB,OAAO,YAAY;AAAA,MAC7C,aAAa,CAAC,KAAK,MAAM,aAAa;AAClC,cAAM,WAAoB,KAAK,KAAK,WAAW,2BAA2B;AAC1E,gBAAQ,IAAI,uBAAuB,QAAQ;AAC3C,iBAAS,MAAM,QAAQ;AAAA,MAC3B;AAAA,MACA,UAAU,SAAU,KAAK,MAAM,UAAU;AACrC,cAAM,WAAW,KAAK;AACtB,iBAAS,MAAM,GAAG,QAAQ,EAAE;AAAA,MAChC;AAAA,IACJ,CAAC;AAEM,IAAM,8BAA8B,OAAQ,EAAE,SAAU,sBAAsB,CAAC;AAGtF,IAAM,YAAY,OAAO,YAAY;AAAA,MACjC,aAAa,CAAC,KAAK,MAAM,aAAa;AAClC,cAAM,WAAoB,KAAK,KAAK,WAAW,SAAS;AACxD,iBAAS,MAAM,QAAQ;AAAA,MAC3B;AAAA,MACA,UAAU,SAAU,KAAK,MAAM,UAAU;AACrC,cAAM,WAAW,KAAK;AACtB,iBAAS,MAAM,GAAG,QAAQ,EAAE;AAAA,MAChC;AAAA,IACJ,CAAC;AAEM,IAAM,WAAW,OAAQ,EAAE,SAAU,UAAU,CAAC;AAGvD,IAAM,iBAAiB,OAAO,YAAY;AAAA,MACtC,aAAa,CAAC,KAAK,MAAM,aAAa;AAClC,cAAM,WAAoB,KAAK,KAAK,WAAW,gBAAgB;AAC/D,iBAAS,MAAM,QAAQ;AAAA,MAC3B;AAAA,MACA,UAAU,SAAU,KAAK,MAAM,UAAU;AACrC,cAAM,WAAW,KAAK;AACtB,iBAAS,MAAM,GAAG,QAAQ,EAAE;AAAA,MAChC;AAAA,IACJ,CAAC;AAEM,IAAM,gBAAgB,OAAQ,EAAE,SAAU,eAAe,CAAC;AAAA;AAAA","sourcesContent":["import multer from 'multer'\r\n\r\nimport path from 'path'\r\n\r\n\r\n// para salvar as listas de engenharia\r\nconst storageEngineeringList = multer.diskStorage({\r\n    destination: (req, file, callback) => {\r\n        const filePath : string = path.join(__dirname, '../../00_production_lists')\r\n        console.log('Função chamada!')\r\n        callback(null, filePath)\r\n    },\r\n    filename: function (req, file, callback) {\r\n        const fileName = file.originalname\r\n        callback(null, `${fileName}`)\r\n    },\r\n})\r\n\r\nexport const uploadEngineeringLists = multer( { storage : storageEngineeringList })\r\n\r\n// para salvar as listas de produção\r\nconst storageProductionList = multer.diskStorage({\r\n    destination: (req, file, callback) => {\r\n        const filePath : string = path.join(__dirname, '../../00_production_lists')\r\n        console.log('Chamado no multer: ', filePath)\r\n        callback(null, filePath)\r\n    },\r\n    filename: function (req, file, callback) {\r\n        const fileName = file.originalname\r\n        callback(null, `${fileName}`)\r\n    },\r\n})\r\n\r\nexport const uploadProductionListsMulter = multer( { storage : storageProductionList })\r\n\r\n// para salvar as IT'S\r\nconst storageIT = multer.diskStorage({\r\n    destination: (req, file, callback) => {\r\n        const filePath : string = path.join(__dirname, '../_its')\r\n        callback(null, filePath)\r\n    },\r\n    filename: function (req, file, callback) {\r\n        const fileName = file.originalname\r\n        callback(null, `${fileName}`)\r\n    },\r\n})\r\n\r\nexport const uploadIT = multer( { storage : storageIT })\r\n\r\n// Para salvar os arquivos da qualidade\r\nconst storageQuality = multer.diskStorage({\r\n    destination: (req, file, callback) => {\r\n        const filePath : string = path.join(__dirname, '../../_quality')\r\n        callback(null, filePath)\r\n    },\r\n    filename: function (req, file, callback) {\r\n        const fileName = file.originalname\r\n        callback(null, `${fileName}`)\r\n    },\r\n})\r\n\r\nexport const uploadQuality = multer( { storage : storageQuality })"]}