"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const dotenv_1 = require("dotenv");
const multer_1 = require("../dist/config/multer");
const engineerCtrl_1 = require("./controllers/engineerCtrl");
const producionCtrl_1 = require("./controllers/producionCtrl");
const sgiCtrl_1 = require("./controllers/sgiCtrl");
const sendCompletePdf_1 = require("./views/sendCompletePdf");
const sendPDfByPost_1 = require("./views/sendPDfByPost");
const qaCtrl_1 = require("./controllers/qaCtrl");
const sendQAfile_1 = require("./views/sendQAfile");
const authCtrl_1 = require("./controllers/authCtrl");
(0, dotenv_1.config)();
const snapsteps = (0, express_1.default)();
snapsteps.use(express_1.default.json());
snapsteps.use((0, cors_1.default)());
snapsteps.post('/eng/list-upload', multer_1.uploadEngineeringLists.single('list'), engineerCtrl_1.createList);
snapsteps.get('/prod/download-list', producionCtrl_1.downloadList);
snapsteps.get('/get-model-and-product-options', producionCtrl_1.getModelAndProductOptions);
snapsteps.post('/production/upload-file', multer_1.uploadProductionListsMulter.single('prod-list'), producionCtrl_1.uploadProductionLists);
snapsteps.post('/sgi/upload-it', multer_1.uploadIT.single('it'), sgiCtrl_1.handleUploadIT);
snapsteps.get('/production/download-it', producionCtrl_1.sendIT);
snapsteps.get('/production/get-options-to-pdf', producionCtrl_1.getModelProductOptionsAndLine);
snapsteps.get('/pdf', sendCompletePdf_1.sendPdf);
snapsteps.get('/pdf-by-post', sendPDfByPost_1.sendPdfByPost);
snapsteps.post('/sgi/upload-quality-file', multer_1.uploadQuality.single('quality'), sgiCtrl_1.handleUploadQualityFile);
snapsteps.get('/qa/get-files', qaCtrl_1.sendQAFilesOptions);
snapsteps.get('/qa/view-it', sendQAfile_1.sendQAFile);
snapsteps.get('/auth', authCtrl_1.credentialCheck);
const port = process.env.PORT || 4322;
snapsteps.listen(port, () => {
    console.log('Server listen in ', port, 'port');
});
